import { TokenType, TurboAuthenticatedConfiguration, TurboSigner, TurboUnauthenticatedConfiguration, TurboWallet } from '../types.js';
import { TurboWinstonLogger } from './logger.js';
import { TurboDataItemAbstractSigner } from './signer.js';
import { TurboAuthenticatedClient, TurboUnauthenticatedClient } from './turbo.js';
export declare class TurboBaseFactory {
    protected static logger: TurboWinstonLogger;
    static setLogLevel(level: string): void;
    static setLogFormat(format: string): void;
    static unauthenticated({ paymentServiceConfig, uploadServiceConfig, }?: TurboUnauthenticatedConfiguration): TurboUnauthenticatedClient;
    protected static getSigner(providedSigner: TurboSigner | undefined, providedPrivateKey: TurboWallet | undefined, token: TokenType): TurboDataItemAbstractSigner;
    static authenticated({ privateKey, signer: providedSigner, paymentServiceConfig, uploadServiceConfig, token, tokenMap, gatewayUrl, tokenTools, }: TurboAuthenticatedConfiguration): TurboAuthenticatedClient;
}
//# sourceMappingURL=factory.d.ts.map