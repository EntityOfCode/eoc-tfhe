/**
 * Copyright (C) 2022-2023 Permanent Data Solutions, Inc. All Rights Reserved.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
import Arweave from '@irys/arweave';
import { BigNumber } from 'bignumber.js';
import { TokenCreateTxParams, TokenPollingOptions, TokenTools, TurboLogger } from '../../types.js';
export declare class ArweaveToken implements TokenTools {
    protected logger: TurboLogger;
    protected arweave: Arweave;
    protected mintU: boolean;
    protected pollingOptions: TokenPollingOptions;
    constructor({ gatewayUrl, arweave, logger, mintU, pollingOptions, }?: {
        gatewayUrl?: string;
        arweave?: Arweave;
        logger?: TurboLogger;
        mintU?: boolean;
        pollingOptions?: TokenPollingOptions;
    });
    createAndSubmitTx({ feeMultiplier, target, tokenAmount, signer, }: TokenCreateTxParams): Promise<{
        id: string;
        target: string;
        reward: string;
    }>;
    pollForTxBeingAvailable({ txId, }: {
        txId: string;
    }): Promise<void>;
    submitTx(tx: any): Promise<void>;
}
export declare const WinstonToTokenAmount: (winston: BigNumber.Value) => BigNumber.Value;
export declare const ARToTokenAmount: (ar: BigNumber.Value) => string;
//# sourceMappingURL=arweave.d.ts.map