"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JPY = exports.BRL = exports.HKD = exports.SGD = exports.INR = exports.AUD = exports.CAD = exports.GBP = exports.EUR = exports.USD = exports.TwoDecimalCurrency = exports.ZeroDecimalCurrency = void 0;
class ZeroDecimalCurrency {
    constructor(amount, type) {
        this.amount = amount;
        this.type = type;
    }
}
exports.ZeroDecimalCurrency = ZeroDecimalCurrency;
class TwoDecimalCurrency {
    constructor(a, type) {
        this.a = a;
        this.type = type;
    }
    get amount() {
        return this.a * 100;
    }
}
exports.TwoDecimalCurrency = TwoDecimalCurrency;
// Two decimal currencies that are supported by the Turbo API
const USD = (usd) => new TwoDecimalCurrency(usd, 'usd');
exports.USD = USD;
const EUR = (eur) => new TwoDecimalCurrency(eur, 'eur');
exports.EUR = EUR;
const GBP = (gbp) => new TwoDecimalCurrency(gbp, 'gbp');
exports.GBP = GBP;
const CAD = (cad) => new TwoDecimalCurrency(cad, 'cad');
exports.CAD = CAD;
const AUD = (aud) => new TwoDecimalCurrency(aud, 'aud');
exports.AUD = AUD;
const INR = (inr) => new TwoDecimalCurrency(inr, 'inr');
exports.INR = INR;
const SGD = (sgd) => new TwoDecimalCurrency(sgd, 'sgd');
exports.SGD = SGD;
const HKD = (hkd) => new TwoDecimalCurrency(hkd, 'hkd');
exports.HKD = HKD;
const BRL = (brl) => new TwoDecimalCurrency(brl, 'brl');
exports.BRL = BRL;
// Zero decimal currencies that are supported by the Turbo API
const JPY = (jpy) => new ZeroDecimalCurrency(jpy, 'jpy');
exports.JPY = JPY;
