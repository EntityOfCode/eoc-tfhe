"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createAxiosInstance = exports.defaultRequestHeaders = void 0;
/**
 * Copyright (C) 2022-2023 Permanent Data Solutions, Inc. All Rights Reserved.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
const axios_1 = __importStar(require("axios"));
const axios_retry_1 = __importDefault(require("axios-retry"));
const logger_js_1 = require("../common/logger.js");
const version_js_1 = require("../version.js");
exports.defaultRequestHeaders = {
    'x-turbo-source-version': version_js_1.version,
    'x-turbo-source-identifier': 'turbo-sdk',
};
const createAxiosInstance = ({ logger = new logger_js_1.TurboWinstonLogger(), axiosConfig = {}, retryConfig = {
    retryDelay: axios_retry_1.default.exponentialDelay,
    retries: 3,
    retryCondition: (error) => {
        return (!(error instanceof axios_1.CanceledError) &&
            axios_retry_1.default.isNetworkOrIdempotentRequestError(error));
    },
    onRetry: (retryCount, error) => {
        logger.debug(`Request failed, ${error}. Retry attempt #${retryCount}...`);
    },
}, } = {}) => {
    const axiosInstance = axios_1.default.create({
        ...axiosConfig,
        headers: {
            ...axiosConfig.headers,
            ...exports.defaultRequestHeaders,
        },
        validateStatus: () => true, // don't throw on non-200 status codes
    });
    // eslint-disable-next-line
    if (retryConfig.retries && retryConfig.retries > 0) {
        (0, axios_retry_1.default)(axiosInstance, retryConfig);
    }
    return axiosInstance;
};
exports.createAxiosInstance = createAxiosInstance;
